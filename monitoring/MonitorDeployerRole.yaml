Resources:
  ServiceRoleAssumer:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: buildStatusAssumerPolicy
      Roles: 
        - !ImportValue SecurityCodeBuildRoleName
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSTS
            Effect: Allow
            Action: sts:AssumeRole
            Resource: !GetAtt ServiceDeployerRole.Arn
    DependsOn: ServiceDeployerRole

  ServiceDeployerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: buildStatusDeployerRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !ImportValue SecurityCodeBuildRoleArn
            Action: sts:AssumeRole

  ServerlessDeployPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: 'ServerlessDeployPolicy'
      Roles: [{Ref: "ServiceDeployerRole"}]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PassRole
            Effect: Allow
            Action:
              - iam:PassRole
            Resource: !ImportValue SecurityCodeBuildRoleArn
          - Sid: Lambda
            Effect: Allow
            Action:
              - lambda:CreateFunction
              - lambda:DeleteFunction
              - lambda:GetFunction
              - lambda:GetFunctionConfiguration
              - lambda:UpdateFunctionConfiguration
              - lambda:InvokeFunction
              - lambda:AddPermission
              - lambda:RemovePermission
              - lambda:CreateAlias
              - lambda:DeleteAlias
              - lambda:UpdateAlias
              - lambda:UpdateFunctionCode
              - lambda:PublishVersion
              - lambda:ListVersionsByFunction
              - lambda:TagResource
              - lambda:UntagResource
              - lambda:ListTags
            Resource:
              - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:buildStatus*
          - Sid: IAM
            Effect: Allow
            Action:
              - iam:CreateRole
              - iam:CreatePolicy
              - iam:DeleteRole
              - iam:DeletePolicy
              - iam:DeleteRolePermissionsBoundary
              - iam:DeleteRolePolicy
              - iam:DeletePolicyVersion
              - iam:DetachRolePolicy
              - iam:UpdateRoleDescription
              - iam:UpdateAssumeRolePolicy
              - iam:UpdateRole
              - iam:PutRolePolicy
              - iam:PutRolePermissionsBoundary
              - iam:GetRole
              - iam:GetRolePolicy
              - iam:GetServiceLinkedRoleDeletionStatus
              - iam:GetPolicy
              - iam:GetPolicyVersion
              - iam:ListEntitiesForPolicy
              - iam:ListPolicyVersions
              - iam:ListRolePolicies
              - iam:ListAttachedRolePolicies
              - iam:ListRoleTags
              - iam:TagRole
              - iam:UntagRole
              - iam:AttachRolePolicy
              - iam:SetDefaultPolicyVersion
              - iam:PassRole
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:policy/buildStatus*
              - !Sub arn:aws:iam::${AWS::AccountId}:role/buildStatus*
          - Sid: Logs
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:DeleteLogStream
              - logs:DeleteLogGroup
              - logs:DescribeLogStreams
              - logs:PutLogEvents
              - logs:FilterLogEvents
            Resource: 
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/buildStatus*:*:*
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/buildStatus*:*:*
          - Sid: S3
            Effect: Allow
            Action:
              - s3:GetBucketLocation
              - s3:DeleteObject
              - s3:DeleteObjectTagging
              - s3:DeleteObjectVersionTagging
              - s3:ListBucket
              - s3:GetObject
              - s3:GetObjectTagging
              - s3:PutObject
              - s3:PutObjectVersionTagging
              - s3:PutObjectTagging
              - s3:PutAnalyticsConfiguration
              - s3:ReplicateTags
            Resource: 
              !Join
                - ''
                - - !ImportValue SecurityDeploymentBucketArn
                  - '*'
          - Sid: AllowAllResources
            Effect: Allow
            Action:
              - iam:ListRoles
              - logs:CreateLogGroup
              - logs:DescribeLogGroups
              - events:PutEvents
              - iam:GetGroup
            Resource: "*"
          - Sid: Events
            Effect: Allow
            Action:
              - events:DeleteRule
              - events:DescribeRule
              - events:PutTargets
              - events:PutRule
              - events:RemoveTargets
              - events:TagResource
              - events:UntagResource
            Resource: !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/buildStatus*
          - Sid: EventsAll
            Effect: Allow
            Action:
              - events:PutEvents
            Resource: "*"

  ServerlessCFTPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: 'ServerlessCFTPolicy'
      Roles: [{Ref: "ServiceDeployerRole"}]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudformationStack
            Effect: Allow
            Action:
              - cloudformation:DeleteStackInstances
              - cloudformation:CancelUpdateStack
              - cloudformation:DetectStackDrift
              - cloudformation:UpdateStackInstances
              - cloudformation:ListStackSetOperations
              - cloudformation:ListStackInstances
              - cloudformation:DescribeStackResource
              - cloudformation:UpdateStackSet
              - cloudformation:CreateStackInstances
              - cloudformation:ContinueUpdateRollback
              - cloudformation:DetectStackResourceDrift
              - cloudformation:ListStackSetOperationResults
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStackSetOperation
              - cloudformation:UpdateStack
              - cloudformation:StopStackSetOperation
              - cloudformation:CreateStackSet
              - cloudformation:ListStackResources
              - cloudformation:SetStackPolicy
              - cloudformation:DescribeStackInstance
              - cloudformation:DescribeStackResources
              - cloudformation:SignalResource
              - cloudformation:DeleteStackSet
              - cloudformation:DescribeStacks
              - cloudformation:DescribeStackResourceDrifts
              - cloudformation:GetStackPolicy
              - cloudformation:DescribeStackSet
              - cloudformation:ListStackSets
              - cloudformation:CreateStack
              - cloudformation:GetTemplate
              - cloudformation:DeleteStack
              - cloudformation:ListChangeSets
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:ValidateTemplate
            Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/buildStatus*/*
          - Sid: Delete 
            Effect: Allow
            Action:
              - cloudformation:CreateUploadBucket
          - Sid: AllowResources
            Effect: Allow
            Action:
              - cloudformation:CreateUploadBucket
              - cloudformation:DescribeStackDriftDetectionStatus
              - cloudformation:ListExports
              - cloudformation:ListStacks
              - cloudformation:ListImports
              - cloudformation:DescribeAccountLimits
              - cloudformation:GetTemplateSummary
              - cloudformation:ValidateTemplate
            Resource: "*"

Outputs:
  ServiceDeployerRoleArn:
    Description: The arn value of deploy role used by the serverless framework
    Value: !GetAtt ServiceDeployerRole.Arn
    Export:
      Name: buildStatusDeployerRoleArn